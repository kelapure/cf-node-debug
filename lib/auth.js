// Generated by CoffeeScript 1.7.1
(function() {
  var LocalStrategy, User, auth, passport, passportLocal, utils;

  passport = require("passport");

  passportLocal = require("passport-local");

  utils = require("./utils");

  LocalStrategy = passportLocal.Strategy;

  auth = exports;

  User = {};

  auth.setUser = function(_arg) {
    var password, userid;
    userid = _arg.userid, password = _arg.password;
    User = {
      userid: userid,
      password: password
    };
  };

  auth.getUser = function() {
    return JSON.parse(JSON.stringify(User));
  };

  passport.serializeUser(function(user, done) {
    return done(null, user.userid);
  });

  passport.deserializeUser(function(userid, done) {
    if ((User != null ? User.userid : void 0) === userid) {
      return done(null, User);
    }
    return done(new Error("userid " + userid + " does not exist"));
  });

  passport.use(new LocalStrategy(function(userid, password, done) {
    if ((User != null ? User.userid : void 0) === userid) {
      if ((User != null ? User.password : void 0) === password) {
        return done(null, User);
      }
    }
    return done(new Error("invalid username or password"));
  }));

}).call(this);
